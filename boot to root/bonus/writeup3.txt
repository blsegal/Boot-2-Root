pour essayer de prendre le contrôle d’une machine on peut s’amuser à regarder la procédure de démarrage de cette même machine. 

on sait que notre image ISO est un fichier d’archive qui a eu besoin d’être monté sur un périphérique de boucle.
en effet pour lancer la machine on n’a pas utilisé un périphérique physique tel qu'un disque dur ou un lecteur de disque optique mais un périphérique de boucle.


comme le périphérique de boucle est un pseudo-périphérique qui rend un fichier accessible en tant que périphérique de bloc. le système de fichiers afférent va nous apparaitre dans le répertoire du point de montage à l’aide de certaine commandes.

d’où une fois connecté en ssh sur la machine via les credentials de Laurie on va essayer de trouver des information relatives au repertoire de point de montage de l’ISO

après avoir tapé la commande : 
mount | grep "iso"

on obtient ceci :
/dev/sr0 on /cdrom type iso9660 (ro,noatime)


on va donc regarder le repertoire /cdrom et on trouve un fichier de configuration (.cfg) isolinux pour en savoir plus 

ces lignes nous intéressent plus particulièrement :

label live
  menu label live - boot the Live System
  kernel /casper/vmlinuz
  append  file=/cdrom/preseed/custom.seed boot=casper initrd=/casper/initrd.gz quiet splash - 


on apprend sur la documentation que isolinux est un dérivé de syslinux et que la documentation de syslinux explique ceci :

Si les touches Shift ou Alt sont maintenues enfoncées pendant le démarrage, ou si les verrous Caps ou Scroll sont définis, SYSLINUX affichera une invite "boot:" de style LILO. L'utilisateur peut alors saisir un nom de fichier de noyau suivi de n'importe quel paramètre de noyau. Le chargeur SYSLINUX n'a pas besoin de connaître le fichier noyau à l'avance. Tout ce qui est requis est un fichier dans le répertoire racine du disque.

après avoir appuyé de façon constante sur shift, on voit bien apparaitre sur l’invité de commande une invite "boot:" de style LILO, comme le fichier isolinux.cfg nous a donné le nom du label il nous reste a taper dans l’invite de commande 
live init=/bin/bash 
puis faire un whoami pour vérifier que nous sommes root et nous le sommes !

ce n’est pas réellement une faille de sécurité mais un facilité de maintenance, pour un admin de prendre le contrôle d’une machine qui ne lui appartient pas pour la réparer; on voit bien que la problématique de la sécurisation d’un système d’information présente toujours des tensions entre l’enjeu de sécurité et l’enjeu simultanée de facilité d’usage. 